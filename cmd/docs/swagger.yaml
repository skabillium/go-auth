basePath: /v1
definitions:
  auth.CreateUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  auth.CreateUserResponse:
    properties:
      email:
        type: string
      id:
        type: string
      token:
        type: string
    type: object
  auth.ForgotPasswordRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  auth.LoginResponse:
    properties:
      email:
        type: string
      id:
        type: string
      token:
        type: string
    type: object
  auth.ResetPasswordRequest:
    properties:
      password:
        type: string
      token:
        type: string
    required:
    - password
    - token
    type: object
  auth.UpdatePasswordRequest:
    properties:
      password:
        type: string
    required:
    - password
    type: object
host: localhost:1323
info:
  contact: {}
  description: Example user auth service
  license:
    name: MIT
    url: https://opensource.org/license/mit
  termsOfService: http://swagger.io/terms/
  title: Auth service
  version: "1.0"
paths:
  /auth/forgot-password:
    post:
      description: Trigger a "forgot password email"
      parameters:
      - description: User email
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/auth.ForgotPasswordRequest'
      responses:
        "204":
          description: No Content
      tags:
      - Auth
  /auth/login:
    post:
      description: Login with credentials
      parameters:
      - description: User credentials
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth.LoginResponse'
      tags:
      - Auth
  /auth/password:
    patch:
      description: Update password
      parameters:
      - description: Password to set
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/auth.UpdatePasswordRequest'
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      tags:
      - Auth
  /auth/register:
    post:
      description: Register a new user
      parameters:
      - description: User credentials
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/auth.CreateUserRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth.CreateUserResponse'
      tags:
      - Auth
  /auth/reset-password:
    post:
      description: Reset password from token
      parameters:
      - description: Token and new password
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/auth.ResetPasswordRequest'
      responses:
        "204":
          description: No Content
      tags:
      - Auth
  /auth/verify-email/{token}:
    get:
      description: Verify email with token
      parameters:
      - description: Email verification token
        in: path
        name: token
        required: true
        type: string
      responses:
        "204":
          description: No Content
      tags:
      - Auth
  /status:
    get:
      description: Check the status of the server
      responses:
        "200":
          description: OK
      tags:
      - Health
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
